<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">cHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGNoZWNrTnVsbChTdHJpbmcgc3RyaW5nKSB7DQoJLy8gVE9E
TyBBdXRvLWdlbmVyYXRlZCBtZXRob2Qgc3R1Yg0KCXJldHVybiBudWxsOw0KfQ0KDQpwcm90ZWN0
ZWQgc3RhdGljIFZhbHVlcyBNZW1vcnkgPSBuZXcgVmFsdWVzKCk7DQoNCnB1YmxpYyBzdGF0aWMg
bG9uZyBjb3B5KElucHV0U3RyZWFtIGlucHV0LCBPdXRwdXRTdHJlYW0gb3V0cHV0KSB0aHJvd3Mg
SU9FeGNlcHRpb24NCnsNCglieXRlW10gYnVmZmVyID0gbmV3IGJ5dGVbNDA5Nl07DQoJbG9uZyBj
b3VudCA9IDBMOw0KCWludCBuID0gMDsNCgl3aGlsZSAoLTEgIT0gKG4gPSBpbnB1dC5yZWFkKGJ1
ZmZlcikpKSB7DQoJCW91dHB1dC53cml0ZShidWZmZXIsIDAsIG4pOw0KCQljb3VudCArPSBuOw0K
CX0NCglyZXR1cm4gY291bnQ7DQp9DQoNCnB1YmxpYyBzdGF0aWMgT2JqZWN0IGdldFJlcXVpcmVk
T2JqUGFyYW0oSURhdGFDdXJzb3IgZGF0YUN1cnNvciwgU3RyaW5nIHBhcmFtS2V5LCBDbGFzcyBj
bGF6eikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24NCnsNCglPYmplY3Qgb2JqID0gSURhdGFVdGls
LmdldChkYXRhQ3Vyc29yLCBwYXJhbUtleSk7DQoNCglpZiAob2JqID09IG51bGwpIHsNCgkJdGhy
b3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlBBUkFNX0lTX01JU1NJTkciKTsNCgl9DQoNCglpZiAo
IWNsYXp6LmlzSW5zdGFuY2Uob2JqKSkgew0KCQl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbigi
SU5WQUxJRF9QQVJBTV9UWVBFIik7DQoJfQ0KDQoJcmV0dXJuIG9iajsNCn0NCg0KcHVibGljIHN0
YXRpYyBTdHJpbmcgZ2V0UmVxdWlyZWRTdHJQYXJhbShJRGF0YUN1cnNvciBkYXRhQ3Vyc29yLCBT
dHJpbmcgcGFyYW1LZXkpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uDQp7DQoJU3RyaW5nIHRlbXAg
PSAoU3RyaW5nKSBnZXRSZXF1aXJlZE9ialBhcmFtKGRhdGFDdXJzb3IsIHBhcmFtS2V5LCBTdHJp
bmcuY2xhc3MpOw0KCWlmICh0ZW1wLmxlbmd0aCgpID09IDApIHsNCgkJdGhyb3cgbmV3IFNlcnZp
Y2VFeGNlcHRpb24oIkVNUFRZX1BBUkFNIik7DQoJfQ0KDQoJcmV0dXJuIHRlbXA7DQp9DQoNCnB1
YmxpYyBzdGF0aWMgU3RyaW5nIGdldFJlcXVpcmVkU3RyUGFyYW0oSURhdGFNYXAgZGF0YSwgU3Ry
aW5nIHBhcmFtS2V5KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbg0Kew0KCVN0cmluZyBzdHIgPSBk
YXRhLmdldEFzTm9uRW1wdHlTdHJpbmcocGFyYW1LZXkpOw0KCWlmIChzdHIgPT0gbnVsbCkgew0K
CQl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbigiRU1QVFlfUEFSQU0iKTsNCgl9DQoJcmV0dXJu
IHN0cjsNCn0NCg0KcHJpdmF0ZSBzdGF0aWMgdm9pZCBzdHJlYW1Ub0ZpbGUoSURhdGFDdXJzb3Ig
ZGF0YUN1cnNvciwgSW5wdXRTdHJlYW0gaW5TdHJlYW0sIFN0cmluZyBmaWxlUGF0aCwgU3RyaW5n
IGFwcGVuZFN0ciwgYm9vbGVhbiBjbG9zZUlucHV0U3RyZWFtKSB0aHJvd3MgRXhjZXB0aW9uDQp7
DQoJYm9vbGVhbiBhcHBlbmQgPSBCb29sZWFuLnZhbHVlT2YoYXBwZW5kU3RyKS5ib29sZWFuVmFs
dWUoKTsNCg0KCUZpbGUgZGVzdEZpbGUgPSBuZXcgRmlsZShmaWxlUGF0aCk7DQoNCgkvL0NvbW1v
blV0aWxzLmNoZWNrRGlyQ3JlYXRlZChkZXN0RmlsZSk7DQoJLy9Db21tb25VdGlscy5jaGVja0Zp
bGVXcml0YWJsZShkZXN0RmlsZSk7DQoJLy9Db21tb25VdGlscy5pc0RpcmVjdG9yeShkZXN0Rmls
ZSk7DQoNCglPdXRwdXRTdHJlYW0gb3V0U3RyZWFtID0gbmV3IEJ1ZmZlcmVkT3V0cHV0U3RyZWFt
KG5ldyBGaWxlT3V0cHV0U3RyZWFtKGRlc3RGaWxlLCBhcHBlbmQpKTsNCg0KCWxvbmcgbGVuZ3Ro
ID0gLTFMOw0KCXRyeSB7DQoJCWxlbmd0aCA9IGNvcHkoaW5TdHJlYW0sIG91dFN0cmVhbSk7DQoJ
fSBmaW5hbGx5IHsNCgkJaWYgKGNsb3NlSW5wdXRTdHJlYW0pIHsNCgkJCWNsb3NlUXVpZXRseShp
blN0cmVhbSk7DQoJCX0NCgkJY2xvc2VRdWlldGx5KG91dFN0cmVhbSk7DQoJfQ0KDQoJbWVyZ2VP
dXRwdXQoZGF0YUN1cnNvciwgImxlbmd0aCIsICIiICsgbGVuZ3RoKTsNCn0NCg0KcHVibGljIHN0
YXRpYyB2b2lkIGNsb3NlUXVpZXRseShJbnB1dFN0cmVhbSBpbnB1dCkgew0KCWlmIChpbnB1dCAh
PSBudWxsKQ0KCQl0cnkgew0KCQkJaW5wdXQuY2xvc2UoKTsNCgkJfSBjYXRjaCAoSU9FeGNlcHRp
b24gZSkgew0KCQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCgkJfQ0KfQ0KDQpwdWJsaWMgc3RhdGlj
IHZvaWQgY2xvc2VRdWlldGx5KE91dHB1dFN0cmVhbSBvdXRwdXQpDQp7DQoJaWYgKG91dHB1dCAh
PSBudWxsKQ0KCQl0cnkgew0KCQkJb3V0cHV0LmNsb3NlKCk7DQoJCX0gY2F0Y2ggKElPRXhjZXB0
aW9uIGUpIHsNCgkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQoJCX0NCn0NCg0KcHVibGljIHN0YXRp
YyB2b2lkIGNsb3NlUXVpZXRseShXcml0ZXIgd3JpdGVyKQ0Kew0KCWlmICh3cml0ZXIgIT0gbnVs
bCkNCgkJdHJ5IHsNCgkJCXdyaXRlci5jbG9zZSgpOw0KCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBl
KSB7DQoJCQllLnByaW50U3RhY2tUcmFjZSgpOw0KCQl9DQp9DQoNCnB1YmxpYyBzdGF0aWMgdm9p
ZCBjbG9zZVF1aWV0bHkoUmVhZGVyIHJlYWRlcikNCnsNCglpZiAocmVhZGVyICE9IG51bGwpDQoJ
CXRyeSB7DQoJCQlyZWFkZXIuY2xvc2UoKTsNCgkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgew0K
CQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCgkJfQ0KfQ0KDQpwdWJsaWMgc3RhdGljIHZvaWQgbWVy
Z2VPdXRwdXQoSURhdGFDdXJzb3IgaWQsIFN0cmluZyBrZXksIE9iamVjdCB2YWx1ZSkgew0KCWlm
IChpZC5maXJzdChrZXkpKSB7DQoJCWlkLnNldFZhbHVlKHZhbHVlKTsNCgl9IGVsc2Ugew0KCQlp
ZC5sYXN0KCk7DQoJCWlkLmluc2VydEFmdGVyKGtleSwgdmFsdWUpOw0KCX0NCn0NCg0KcHVibGlj
IHN0YXRpYyB2b2lkIHRocm93QXNTZXJ2aWNlRXhjZXB0aW9uKFRocm93YWJsZSB0aCkgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gew0KCWlmICgodGggaW5zdGFuY2VvZiBTZXJ2aWNlRXhjZXB0aW9u
KSkgew0KCQl0aHJvdyAoKFNlcnZpY2VFeGNlcHRpb24pIHRoKTsNCgl9DQoJdGhyb3cgbmV3IFNl
cnZpY2VFeGNlcHRpb24odGgpOw0KfQ0KCQ0KcHJpdmF0ZSBzdGF0aWMgU3RyaW5nW10gdG9rZW5p
emUoU3RyaW5nIHN0cmluZywgU3RyaW5nIGRlbGltaXRvcikNCnsNCiAgVmVjdG9yIHZlY3RvciA9
IG5ldyBWZWN0b3IoKTsNCiAgaW50IGluZGV4ID0gMDsNCiAgaW50IHByZXZJbmRleCA9IDA7DQoN
CiAgd2hpbGUgKChpbmRleCA9IHN0cmluZy5pbmRleE9mKGRlbGltaXRvciwgcHJldkluZGV4KSkg
Pj0gMCkNCiAgew0KICAgIHZlY3Rvci5hZGRFbGVtZW50KHN0cmluZy5zdWJzdHJpbmcocHJldklu
ZGV4LCBpbmRleCkpOw0KICAgIHByZXZJbmRleCA9IGluZGV4ICsgMTsNCiAgfQ0KICB2ZWN0b3Iu
YWRkRWxlbWVudChzdHJpbmcuc3Vic3RyaW5nKHByZXZJbmRleCkpOw0KICBTdHJpbmdbXSBhcnJh
eSA9IG5ldyBTdHJpbmdbdmVjdG9yLnNpemUoKV07DQogIGZvciAoaW50IGkgPSAwOyBpIDwgYXJy
YXkubGVuZ3RoOyBpKyspDQogIHsNCiAgICBhcnJheVtpXSA9IChTdHJpbmcpIHZlY3Rvci5lbGVt
ZW50QXQoaSk7DQogIH0NCg0KICByZXR1cm4gYXJyYXk7DQp9DQoJDQo=</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>java.io.BufferedInputStream</value>
    <value>java.io.BufferedOutputStream</value>
    <value>java.io.FileInputStream</value>
    <value>java.io.FileNotFoundException</value>
    <value>java.io.FileOutputStream</value>
    <value>java.io.IOException</value>
    <value>java.io.ByteArrayInputStream</value>
    <value>com.wm.data.IData</value>
    <value>com.wm.data.IDataCursor</value>
    <value>com.wm.data.IDataUtil</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Enumeration</value>
    <value>java.util.Vector</value>
    <value>java.util.prefs.BackingStoreException</value>
    <value>java.util.zip.ZipEntry</value>
    <value>java.util.zip.ZipInputStream</value>
    <value>java.util.zip.ZipOutputStream</value>
    <value>java.io.InputStream</value>
    <value>java.io.OutputStream</value>
    <value>java.io.Writer</value>
    <value>java.io.Reader</value>
    <value>java.io.File</value>
  </array>
</Values>
